
// Params for width and height
const uint8_t kMatrixWidth = 16;
const uint8_t kMatrixHeight = 32;

#define NUM_LEDS (kMatrixWidth * kMatrixHeight)
CRGB leds[ NUM_LEDS ];
#define LAST_VISIBLE_LED 511
uint16_t XY (uint16_t x, uint16_t y) {
  // any out of bounds address maps to the first hidden pixel
  if ( (x >= kMatrixWidth) || (y >= kMatrixHeight) ) {
    return (LAST_VISIBLE_LED + 1);
  }

  const uint16_t XYTable[] = {
   480, 479, 416, 415, 352, 351, 288, 287, 224, 223, 160, 159,  96,  95,  32,  31,
   481, 478, 417, 414, 353, 350, 289, 286, 225, 222, 161, 158,  97,  94,  33,  30,
   482, 477, 418, 413, 354, 349, 290, 285, 226, 221, 162, 157,  98,  93,  34,  29,
   483, 476, 419, 412, 355, 348, 291, 284, 227, 220, 163, 156,  99,  92,  35,  28,
   484, 475, 420, 411, 356, 347, 292, 283, 228, 219, 164, 155, 100,  91,  36,  27,
   485, 474, 421, 410, 357, 346, 293, 282, 229, 218, 165, 154, 101,  90,  37,  26,
   486, 473, 422, 409, 358, 345, 294, 281, 230, 217, 166, 153, 102,  89,  38,  25,
   487, 472, 423, 408, 359, 344, 295, 280, 231, 216, 167, 152, 103,  88,  39,  24,
   488, 471, 424, 407, 360, 343, 296, 279, 232, 215, 168, 151, 104,  87,  40,  23,
   489, 470, 425, 406, 361, 342, 297, 278, 233, 214, 169, 150, 105,  86,  41,  22,
   490, 469, 426, 405, 362, 341, 298, 277, 234, 213, 170, 149, 106,  85,  42,  21,
   491, 468, 427, 404, 363, 340, 299, 276, 235, 212, 171, 148, 107,  84,  43,  20,
   492, 467, 428, 403, 364, 339, 300, 275, 236, 211, 172, 147, 108,  83,  44,  19,
   493, 466, 429, 402, 365, 338, 301, 274, 237, 210, 173, 146, 109,  82,  45,  18,
   494, 465, 430, 401, 366, 337, 302, 273, 238, 209, 174, 145, 110,  81,  46,  17,
   495, 464, 431, 400, 367, 336, 303, 272, 239, 208, 175, 144, 111,  80,  47,  16,
   496, 463, 432, 399, 368, 335, 304, 271, 240, 207, 176, 143, 112,  79,  48,  15,
   497, 462, 433, 398, 369, 334, 305, 270, 241, 206, 177, 142, 113,  78,  49,  14,
   498, 461, 434, 397, 370, 333, 306, 269, 242, 205, 178, 141, 114,  77,  50,  13,
   499, 460, 435, 396, 371, 332, 307, 268, 243, 204, 179, 140, 115,  76,  51,  12,
   500, 459, 436, 395, 372, 331, 308, 267, 244, 203, 180, 139, 116,  75,  52,  11,
   501, 458, 437, 394, 373, 330, 309, 266, 245, 202, 181, 138, 117,  74,  53,  10,
   502, 457, 438, 393, 374, 329, 310, 265, 246, 201, 182, 137, 118,  73,  54,   9,
   503, 456, 439, 392, 375, 328, 311, 264, 247, 200, 183, 136, 119,  72,  55,   8,
   504, 455, 440, 391, 376, 327, 312, 263, 248, 199, 184, 135, 120,  71,  56,   7,
   505, 454, 441, 390, 377, 326, 313, 262, 249, 198, 185, 134, 121,  70,  57,   6,
   506, 453, 442, 389, 378, 325, 314, 261, 250, 197, 186, 133, 122,  69,  58,   5,
   507, 452, 443, 388, 379, 324, 315, 260, 251, 196, 187, 132, 123,  68,  59,   4,
   508, 451, 444, 387, 380, 323, 316, 259, 252, 195, 188, 131, 124,  67,  60,   3,
   509, 450, 445, 386, 381, 322, 317, 258, 253, 194, 189, 130, 125,  66,  61,   2,
   510, 449, 446, 385, 382, 321, 318, 257, 254, 193, 190, 129, 126,  65,  62,   1,
   511, 448, 447, 384, 383, 320, 319, 256, 255, 192, 191, 128, 127,  64,  63,   0
  };

  uint16_t i = (y * kMatrixWidth) + x;
  uint16_t j = XYTable[i];
  return j;
}
